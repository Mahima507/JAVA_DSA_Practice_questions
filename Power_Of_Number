 //Power of a Number
// 2^5
public class PowerOfNumber {

    // Approach 1: Stack Building (void)
    public static void powerOfNumberStackBuilding(int base, int exponent) {
        powerOfNumberStackBuildingHelper(base, exponent, 1, base);
    }

    private static void powerOfNumberStackBuildingHelper(int base, int exponent, int currentExponent, int result) {
        if (currentExponent == exponent) {
            System.out.println(base + "^" + exponent + " = " + result);
        } else {
            result *= base;
            powerOfNumberStackBuildingHelper(base, exponent, currentExponent + 1, result);
        }
    }

     // Approach 2: Stack Falling (return type)
    public static int powerOfNumberStackFalling(int base, int exponent) {
        if (exponent == 0) {
            return 1;
        } else {
            return base * powerOfNumberStackFalling(base, exponent - 1);
        }
    }

    public static void main(String[] args) {
        int base = 2;
        int exponent = 5;

        System.out.println("Approach 1: Stack Building ");
       
        powerOfNumberStackBuilding(base, exponent);
        
        System.out.println("Approach 2: Stack Falling ");
       
        int result = powerOfNumberStackFalling(base, exponent);
       
        System.out.println(base + "^" + exponent + " = " + result);
    }
}
